> what is promises.all method : https://youtu.be/B6XS6ZKIU8s

> use of express.Router() , express.json() ???

> difference between synchronous and asynchronous function and must give example ???
* working of asynchronous function : link : https://www.youtube.com/watch?v=AyJq1RRaY_k

> while making social media website why we set like type as map  ???
* Using a Map as the data structure to store likes (or any other type of relationship
between users and posts, for that matter) is a common approach in social media
websites because it provides a fast and flexible way to store and retrieve information
about the relationships between entities (e.g., users and posts).

* The Map data structure provides a fast way to retrieve values by key, so you can
efficiently look up the information about a particular relationship (e.g., which
users have liked a particular post) without having to iterate over an entire array
of relationships. Additionally, the Map data structure allows you to store any type
of object as the key, including an object that represents a user and another object
that represents a post. This makes it easy to store and retrieve complex relationships
between entities in your social media website.

* Note that using a Map is just one of many possible approaches to storing relationships
in a social media website, and other data structures such as arrays, lists, or a custom
object may also be used depending on the specific requirements of your website.

> find all about different type of status code ???

> learn how to use postman ???

> what is difference between useEffect and useMemo ???

> what is ems and rems ?? link : https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units;
=> in sort ems is taking size of font according to parent element for example for <li> it will be <ul> etc
   whereas rems is relative size with respect to <html>

> validation through formik and yup ???
 link : https://www.geeksforgeeks.org/reactjs-form-validation-using-formik-and-yup/

> complete css grid ??
 * span unit ??

> what is header and why it is used ??
An HTTP header is a field of an HTTP request or response that
passes additional context and metadata about the request or 
response. For example, a request message can use headers to 
indicate it's preferred media formats, while a response can use
header to indicate the media format of the returned body.
for example : 
const response = await fetch(`http://localhost:3001/posts` , {
        method : "POST",
        headers : { Authorization : `Bearer ${token}`},
        body : FormData,
})
here we are passing headers to pass token information
